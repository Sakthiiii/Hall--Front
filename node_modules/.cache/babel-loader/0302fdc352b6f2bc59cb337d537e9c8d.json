{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ELCOT\\\\Desktop\\\\HallBooking\\\\Frontend\\\\src\\\\BookRoom.js\";\nimport React from \"react\";\nimport axios from \"axios\";\nimport { Button, Form } from \"react-bootstrap\";\nimport { withRouter } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst API_URL = \"https://hall-bookng.herokuapp.com/rooms\";\n\nclass BookRoom extends React.Component {\n  constructor() {\n    super();\n\n    this.componentDidMount = () => this.getRooms();\n\n    this.getRooms = async () => {\n      try {\n        const {\n          data\n        } = await axios.get(API_URL);\n        this.setState({\n          rooms: data\n        });\n      } catch (err) {\n        console.error(err);\n      }\n    };\n\n    this.BookRoom = async () => {\n      const {\n        name,\n        customer,\n        date,\n        id,\n        rooms\n      } = this.state;\n      console.log(id, date);\n      var config = {\n        method: \"put\",\n        url: `${API_URL}/${id}`,\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        data: JSON.stringify({\n          name,\n          customer,\n          date,\n          id\n        })\n      };\n      axios(config).then(response => {\n        console.log(JSON.stringify(response.data));\n        if (!response.data.error) this.props.history.push(\"/rooms\");else alert(response.data.error);\n      }).catch(function (error) {\n        console.log(error);\n      });\n    };\n\n    this.selectRoom = room => this.setState({\n      id: room.id,\n      name: room.name,\n      customer: room.customer\n    });\n\n    this.handleChange = ({\n      target: {\n        name,\n        value\n      }\n    }) => {\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      this.BookRoom();\n    };\n\n    this.state = {\n      rooms: [],\n      name: \"\",\n      customer: \"\",\n      date: \"\",\n      id: null\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Select room\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: this.handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \" Name : \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"input\", {\n          disabled: true,\n          required: true,\n          type: \"text\",\n          name: \"name\",\n          placeholder: \"choose room\",\n          value: this.state.name,\n          onChange: this.handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \" ID : \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"input\", {\n          disabled: true,\n          type: \"number\",\n          name: \"id\",\n          placeholder: \"choose room\",\n          value: this.state.id,\n          onChange: this.handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 18\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \" Customer : \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"input\", {\n          disabled: true,\n          required: true,\n          type: \"text\",\n          name: \"customer\",\n          placeholder: \"choose room\",\n          value: this.state.customer,\n          onChange: this.handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \" Date : \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"input\", {\n          required: true,\n          type: \"text\",\n          name: \"date\",\n          value: this.state.date,\n          onChange: this.handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }, this), this.state.rooms.map(room => {\n          return /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"li\", {\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                onClick: () => {\n                  this.selectRoom(room);\n                },\n                children: room.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 121,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true);\n        }), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), \" \"]\n    }, void 0, true);\n  }\n\n}\n\nexport default _c = withRouter(BookRoom);\n\nvar _c;\n\n$RefreshReg$(_c, \"%default%\");","map":{"version":3,"sources":["C:/Users/ELCOT/Desktop/HallBooking/Frontend/src/BookRoom.js"],"names":["React","axios","Button","Form","withRouter","API_URL","BookRoom","Component","constructor","componentDidMount","getRooms","data","get","setState","rooms","err","console","error","name","customer","date","id","state","log","config","method","url","headers","JSON","stringify","then","response","props","history","push","alert","catch","selectRoom","room","handleChange","target","value","handleSubmit","e","preventDefault","render","map"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport axios from \"axios\";\r\nimport { Button, Form } from \"react-bootstrap\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nconst API_URL = \"https://hall-bookng.herokuapp.com/rooms\";\r\n\r\nclass BookRoom extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      rooms: [],\r\n      name: \"\",\r\n      customer: \"\",\r\n      date: \"\",\r\n      id: null,\r\n    };\r\n  }\r\n\r\n  componentDidMount = () => this.getRooms();\r\n\r\n  getRooms = async () => {\r\n    try {\r\n      const { data } = await axios.get(API_URL);\r\n      this.setState({ rooms: data });\r\n    } catch (err) {\r\n      console.error(err);\r\n    }\r\n  };\r\n\r\n  BookRoom = async () => {\r\n    const { name, customer, date, id, rooms } = this.state;\r\n    console.log(id, date);\r\n\r\n    var config = {\r\n      method: \"put\",\r\n      url: `${API_URL}/${id}`,\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      data: JSON.stringify({\r\n        name,\r\n        customer,\r\n        date,\r\n        id,\r\n      }),\r\n    };\r\n\r\n    axios(config)\r\n      .then((response) => {\r\n        console.log(JSON.stringify(response.data));\r\n        if (!response.data.error) this.props.history.push(\"/rooms\");\r\n        else alert(response.data.error);\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  selectRoom = (room) =>\r\n    this.setState({ id: room.id, name: room.name, customer: room.customer });\r\n\r\n  handleChange = ({ target: { name, value } }) => {\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    this.BookRoom();\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <h3>Select room</h3>\r\n        <Form onSubmit={this.handleSubmit}>\r\n          <label> Name : </label>{\" \"}\r\n          <input\r\n            disabled\r\n            required\r\n            type=\"text\"\r\n            name=\"name\"\r\n            placeholder=\"choose room\"\r\n            value={this.state.name}\r\n            onChange={this.handleChange}\r\n          />{\" \"}\r\n          <label> ID : </label>{\" \"}\r\n          <input\r\n            disabled\r\n            type=\"number\"\r\n            name=\"id\"\r\n            placeholder=\"choose room\"\r\n            value={this.state.id}\r\n            onChange={this.handleChange}\r\n          />{\" \"}\r\n          <br /> <br />\r\n          <label> Customer : </label>{\" \"}\r\n          <input\r\n            disabled\r\n            required\r\n            type=\"text\"\r\n            name=\"customer\"\r\n            placeholder=\"choose room\"\r\n            value={this.state.customer}\r\n            onChange={this.handleChange}\r\n          />{\" \"}\r\n          <label> Date : </label>{\" \"}\r\n          <input\r\n            required\r\n            type=\"text\"\r\n            name=\"date\"\r\n            value={this.state.date}\r\n            onChange={this.handleChange}\r\n          />\r\n          <br />\r\n          <br />\r\n          {this.state.rooms.map((room) => {\r\n            return (\r\n              <>\r\n                <li>\r\n                  <Button\r\n                    onClick={() => {\r\n                      this.selectRoom(room);\r\n                    }}\r\n                  >\r\n                    {room.name}\r\n                  </Button>\r\n                </li>\r\n                <br />\r\n              </>\r\n            );\r\n          })}\r\n          <br />\r\n          <input type=\"Submit\" />\r\n        </Form>{\" \"}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(BookRoom);\r\n"]},"metadata":{},"sourceType":"module"}